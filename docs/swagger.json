{
    "swagger": "2.0",
    "info": {
        "description": "Gin APIs",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/v1/auth/login": {
            "post": {
                "description": "Authenticate a user and return JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "Login Request",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errs.AppError"
                        }
                    },
                    "417": {
                        "description": "Expectation Failed",
                        "schema": {
                            "$ref": "#/definitions/errs.AppError"
                        }
                    }
                }
            }
        },
        "/v1/auth/sign-up": {
            "post": {
                "description": "Register a new user and return JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Sign Up",
                "parameters": [
                    {
                        "description": "Sign Up Request",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SignUpRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.SignUpResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errs.AppError"
                        }
                    },
                    "417": {
                        "description": "Expectation Failed",
                        "schema": {
                            "$ref": "#/definitions/errs.AppError"
                        }
                    }
                }
            }
        },
        "/v1/file/serve/{fileName}": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Get a file by file name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/*"
                ],
                "tags": [
                    "File"
                ],
                "summary": "Get File",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File name to serve",
                        "name": "fileName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File served successfully",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errs.AppError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errs.AppError"
                        }
                    }
                }
            }
        },
        "/v1/file/upload": {
            "post": {
                "description": "Upload file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "File"
                ],
                "summary": "Upload file",
                "parameters": [
                    {
                        "type": "file",
                        "description": "File Upload Request",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UploadFileResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errs.AppError"
                        }
                    }
                }
            }
        },
        "/v1/user/me": {
            "get": {
                "description": "Get user info From JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "User info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UserInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errs.AppError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "password": {
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 8,
                    "example": "12345678"
                }
            }
        },
        "dto.SignUpRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "password": {
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 8,
                    "example": "12345678"
                }
            }
        },
        "dto.SignUpResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Sign Up successfully.!"
                },
                "token": {
                    "$ref": "#/definitions/dto.TokenResponse"
                }
            }
        },
        "dto.TokenResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "dto.UploadFileResponse": {
            "type": "object",
            "properties": {
                "fileName": {
                    "type": "string",
                    "example": "asdasdadsd2.png"
                },
                "fileUrl": {
                    "type": "string",
                    "example": "http://localhost:8080/v1/file/serve/fileName"
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "dto.UserInfo": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string",
                    "example": "http://localhost:8080/v1/file/serve/fileName"
                },
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "id": {
                    "type": "integer",
                    "example": 2
                }
            }
        },
        "errs.AppError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerToken": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}